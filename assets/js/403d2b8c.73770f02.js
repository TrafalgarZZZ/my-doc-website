"use strict";(self.webpackChunkmy_doc_website=self.webpackChunkmy_doc_website||[]).push([[9132],{9400:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>r});var a=t(7624),i=t(2172);const s={},o="Pod Scheduling Optimization",d={id:"user-manual/scheduling/pod_schedule_optimization",title:"Pod Scheduling Optimization",description:"To help users better use Fluid, we provide a series of scheduling plugins. By automatically injecting affinity-related information for Pods, we optimize the scheduling results of Pods and improve the overall efficiency of cluster usage.",source:"@site/docs/user-manual/scheduling/pod_schedule_optimization.md",sourceDirName:"user-manual/scheduling",slug:"/user-manual/scheduling/pod_schedule_optimization",permalink:"/my-doc-website/docs/user-manual/scheduling/pod_schedule_optimization",draft:!1,unlisted:!1,editUrl:"https://github.com/TrafalgarZZZ/my-doc-website/tree/master/docs/user-manual/scheduling/pod_schedule_optimization.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cache Co-locality for Workload Scheduling",permalink:"/my-doc-website/docs/user-manual/scheduling/data_co_locality"},next:{title:"Pod Scheduling Base on Runtime Tiered Locality",permalink:"/my-doc-website/docs/user-manual/scheduling/tiered_locality_schedule"}},l={},r=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Running Demo 1: Create a Pod without a mounted dataset, it will be scheduled to a node as far away from the dataset as possible",id:"running-demo-1-create-a-pod-without-a-mounted-dataset-it-will-be-scheduled-to-a-node-as-far-away-from-the-dataset-as-possible",level:2},{value:"Running Demo 2: Create a Pod with mounted dataset, which will try to schedule to the node where the mounted dataset exists",id:"running-demo-2-create-a-pod-with-mounted-dataset-which-will-try-to-schedule-to-the-node-where-the-mounted-dataset-exists",level:2},{value:"Running Demo 3: Create a Pod with mounted dataset, and schedule pod to the nodes with mounted dataset through specifying Pod Label",id:"running-demo-3-create-a-pod-with-mounted-dataset-and-schedule-pod-to-the-nodes-with-mounted-dataset-through-specifying-pod-label",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"pod-scheduling-optimization",children:"Pod Scheduling Optimization"}),"\n",(0,a.jsx)(n.p,{children:"To help users better use Fluid, we provide a series of scheduling plugins. By automatically injecting affinity-related information for Pods, we optimize the scheduling results of Pods and improve the overall efficiency of cluster usage."}),"\n",(0,a.jsx)(n.p,{children:"Specifically, Fluid, combined with Pod scheduling policies based on datasets layout, can achieve the following functions by injecting scheduling information into Pods through the webhook mechanism."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Support K8s native scheduler, as well as Volcano, Yunikorn, etc. to achieve Pod data affinity scheduling"}),"\n",(0,a.jsx)(n.li,{children:"Scheduling Pods to nodes with data caching capability first"}),"\n",(0,a.jsx)(n.li,{children:"Scheduling Pods forcibly to nodes with data caching capability by specifying the Pod Label"}),"\n",(0,a.jsx)(n.li,{children:"When Pods do not use data sets, they can avoid scheduling to nodes with cache as much as possible"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"The version of k8s you are using needs to support admissionregistration.k8s.io/v1 (Kubernetes version > 1.16 )\nEnabling allowed controllers needs to be configured by passing a flag to the Kubernetes API server. Make sure that your cluster is properly configured."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"--enable-admission-plugins=MutatingAdmissionWebhook\n"})}),"\n",(0,a.jsx)(n.p,{children:"Note that if your cluster has been previously configured with other allowed controllers, you only need to add the MutatingAdmissionWebhook parameter."}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Check all nodes"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ kubectl get nodes\nNAME                      STATUS   ROLES    AGE   VERSION\nnode.172.16.0.16   Ready    <none>   16d   v1.20.4-aliyun.1\nnode.172.16.1.84   Ready    <none>   16d   v1.20.4-aliyun.1\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Check the Dataset resource object to be created"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'$ cat<<EOF >dataset.yaml\napiVersion: data.fluid.io/v1alpha1\nkind: Dataset\nmetadata:\n  name: hbase\nspec:\n  mounts:\n    - mountPoint: https://mirrors.tuna.tsinghua.edu.cn/apache/hbase/stable/\n      name: hbase\n---\napiVersion: data.fluid.io/v1alpha1\nkind: AlluxioRuntime\nmetadata:\n  name: hbase\nspec:\n  replicas: 1\n  tieredstore:\n    levels:\n      - mediumtype: MEM\n        path: /dev/shm\n        quota: 2Gi\n        high: "0.95"\n        low: "0.7"\nEOF\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create Dataset resource objects"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ kubectl create -f dataset-global.yaml\ndataset.data.fluid.io/hbase created\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This configuration file fragment contains a lot of Alluxio-related configuration information that will be used by Fluid to start an Alluxio instance.\nThe ",(0,a.jsx)(n.code,{children:"spec.replicas"})," property in the above configuration fragment is set to 1, which indicates that Fluid will start an Alluxio instance with one Alluxio Master and one Alluxio Worker."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create AlluxioRuntime resources and check status"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ kubectl create -f runtime.yaml\nalluxioruntime.data.fluid.io/hbase created\n\n$  kubectl get po -owide\nNAME                 READY   STATUS    RESTARTS   AGE   IP             NODE                      NOMINATED NODE   READINESS GATES\nhbase-master-0       2/2     Running   0          11m   172.16.0.16    node.172.16.0.16   <none>           <none>\nhbase-worker-0       2/2     Running   0          10m   172.16.1.84    node.172.16.1.84   <none>           <none>\n"})}),"\n",(0,a.jsx)(n.p,{children:"Here you can see that there is an Alluxio Worker successfully started and running on node 172.16.1.84."}),"\n",(0,a.jsx)(n.h2,{id:"running-demo-1-create-a-pod-without-a-mounted-dataset-it-will-be-scheduled-to-a-node-as-far-away-from-the-dataset-as-possible",children:"Running Demo 1: Create a Pod without a mounted dataset, it will be scheduled to a node as far away from the dataset as possible"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create a Pod"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ cat<<EOF >nginx-1.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-1\nspec:\n  containers:\n    - name: nginx-1\n      image: nginx\n      volumeMounts:\n        - mountPath: /data\n          name: hbase-vol\n  volumes:\n    - name: hbase-vol\n      persistentVolumeClaim:\n        claimName: hbase\nEOF\n$ kubectl create -f nginx-1.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Check the Pod"})}),"\n",(0,a.jsx)(n.p,{children:"Checking the yaml file of Pod, shows that the following affinity constraint information has been injected:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"spec:\n  affinity:\n    nodeAffinity:\n      preferredDuringSchedulingIgnoredDuringExecution:\n        - preference:\n            matchExpressions:\n              - key: fluid.io/dataset-num\n                operator: DoesNotExist\n          weight: 100\n"})}),"\n",(0,a.jsx)(n.p,{children:"As affected by affinity, the Pod is scheduled to the node.172.16.0.16 where there is no cache (i.e. no Alluxio Worker Pod running):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ kubectl get pods nginx-1 -o  custom-columns=NAME:metadata.name,NODE:.spec.nodeName\nNAME    NODE\nnginx-1   node.172.16.0.16\n"})}),"\n",(0,a.jsx)(n.h2,{id:"running-demo-2-create-a-pod-with-mounted-dataset-which-will-try-to-schedule-to-the-node-where-the-mounted-dataset-exists",children:"Running Demo 2: Create a Pod with mounted dataset, which will try to schedule to the node where the mounted dataset exists"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create a Pod"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ cat<<EOF >nginx-2.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-2\nspec:\n  containers:\n    - name: nginx-2\n      image: nginx\n      volumeMounts:\n        - mountPath: /data\n          name: hbase-vol\n  volumes:\n    - name: hbase-vol\n      persistentVolumeClaim:\n        claimName: hbase\nEOF\n$ kubectl create -f nginx-2.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Check the Pod"})}),"\n",(0,a.jsx)(n.p,{children:"Checking the yaml file of Pod, shows that the following information has been injected:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'spec:\n  affinity:\n    nodeAffinity:\n      preferredDuringSchedulingIgnoredDuringExecution:\n      - preference:\n          matchExpressions:\n          - key: fluid.io/s-default-hbase\n            operator: In\n            values:\n            - "true"\n        weight: 100\n'})}),"\n",(0,a.jsx)(n.p,{children:"Through the Webhook mechanism, the application Pod is injected with preferred affinity to the cache worker."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ kubectl get pods nginx-2 -o  custom-columns=NAME:metadata.name,NODE:.spec.nodeName\nNAME    NODE\nnginx-1   node.172.16.1.84\n"})}),"\n",(0,a.jsx)(n.p,{children:"From the results, we can see that the pod is scheduled to the node with the data cache (i.e., running the Alluxio Worker Pod)."}),"\n",(0,a.jsx)(n.h2,{id:"running-demo-3-create-a-pod-with-mounted-dataset-and-schedule-pod-to-the-nodes-with-mounted-dataset-through-specifying-pod-label",children:"Running Demo 3: Create a Pod with mounted dataset, and schedule pod to the nodes with mounted dataset through specifying Pod Label"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create a Pod"})}),"\n",(0,a.jsxs)(n.p,{children:["The Label should be specified in metadata (in format ",(0,a.jsx)(n.code,{children:"fluid.io/dataset.{dataset_name}.sched: required"}),"). Such as ",(0,a.jsx)(n.code,{children:"fluid.io/dataset.hbase.sched: required"}),", which indicates that this pod need to be scheduled to the node with dataset hbase cache."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'$ cat<<EOF >nginx-3.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-3\n  labels:\n    fuse.serverful.fluid.io/inject: "true"\n    fluid.io/dataset.hbase.sched: required\nspec:\n  containers:\n    - name: nginx-3\n      image: nginx\n      volumeMounts:\n        - mountPath: /data\n          name: hbase-vol\n  volumes:\n    - name: hbase-vol\n      persistentVolumeClaim:\n        claimName: hbase\nEOF\n$ kubectl create -f nginx-3.yaml\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Check the Pod"})}),"\n",(0,a.jsx)(n.p,{children:"Checking the yaml file of Pod, shows that the following information has been injected:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'spec:\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: fluid.io/s-default-hbase\n            operator: In\n            values:\n            - "true"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Through the Webhook mechanism, the application Pod is injected with preferred affinity to the cache worker."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ kubectl get pods nginx-3 -o  custom-columns=NAME:metadata.name,NODE:.spec.nodeName\nNAME    NODE\nnginx-3   node.172.16.1.84\n"})}),"\n",(0,a.jsx)(n.p,{children:"From the results, we can see that the pod is scheduled to the node with the data cache (i.e., running the Alluxio Worker Pod)."})]})}function h(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>d,M:()=>o});var a=t(1504);const i={},s=a.createContext(i);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);